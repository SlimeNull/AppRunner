<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageName.Applications" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="PageName.Environments" xml:space="preserve">
    <value>环境</value>
  </data>
  <data name="PageName.About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="PageName.Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Common.Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="Tips.ThereIsNothingHere" xml:space="preserve">
    <value>这里还什么都没有呢</value>
  </data>
  <data name="Title.AddNewApplication" xml:space="preserve">
    <value>添加新程序</value>
  </data>
  <data name="Common.OK" xml:space="preserve">
    <value>好的</value>
  </data>
  <data name="Common.Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="Common.No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Common.Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Message.FailedToRunApplication" xml:space="preserve">
    <value>运行程序失败</value>
  </data>
  <data name="Menu.Run" xml:space="preserve">
    <value>运行</value>
  </data>
  <data name="Menu.Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Menu.RunAsAdministrator" xml:space="preserve">
    <value>以管理员权限运行</value>
  </data>
  <data name="Menu.RunWithEnvironment" xml:space="preserve">
    <value>打开环境</value>
  </data>
  <data name="Title.EditApplication" xml:space="preserve">
    <value>编辑程序</value>
  </data>
  <data name="Title.AddNewEnvironment" xml:space="preserve">
    <value>添加新环境</value>
  </data>
  <data name="Title.EditEnvironment" xml:space="preserve">
    <value>编辑环境</value>
  </data>
  <data name="Common.Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="Label.Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Label.Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Label.WorkingDirectory" xml:space="preserve">
    <value>工作目录</value>
  </data>
  <data name="Label.Environment" xml:space="preserve">
    <value>环境</value>
  </data>
  <data name="Label.EnvironmentVariables" xml:space="preserve">
    <value>环境变量</value>
  </data>
  <data name="Label.DisplayName" xml:space="preserve">
    <value>显示名称</value>
  </data>
  <data name="Label.Arguments" xml:space="preserve">
    <value>参数</value>
  </data>
  <data name="Label.CommandLineArguments" xml:space="preserve">
    <value>命令行参数</value>
  </data>
  <data name="Label.FileName" xml:space="preserve">
    <value>文件名</value>
  </data>
  <data name="Label.FileNameOrPath" xml:space="preserve">
    <value>文件名或路径</value>
  </data>
  <data name="Label.RunAsAdministrator" xml:space="preserve">
    <value>以管理员权限运行</value>
  </data>
  <data name="Label.CreateNoWindow" xml:space="preserve">
    <value>不要创建窗口</value>
  </data>
  <data name="Label.UseShellExecute" xml:space="preserve">
    <value>使用 ShellExecute</value>
  </data>
  <data name="Menu.Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Message.AppFileNameCanNotBeEmpty" xml:space="preserve">
    <value>应用文件名不可为空</value>
  </data>
  <data name="Label.Group" xml:space="preserve">
    <value>分组</value>
  </data>
  <data name="Tooltip.SelectGroup" xml:space="preserve">
    <value>选择组</value>
  </data>
  <data name="Common.Select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="Label.FileMaps" xml:space="preserve">
    <value>文件映射</value>
  </data>
  <data name="Placeholder.EnvironmentVariables" xml:space="preserve">
    <value>名称=值</value>
  </data>
  <data name="Placeholder.FileMaps" xml:space="preserve">
    <value>源文件&gt;目标文件</value>
  </data>
  <data name="Message.AnErrorOccurredWhilePerformingFileMappingOnTheTargetApplication" xml:space="preserve">
    <value>在对目标应用执行文件映射时出现了错误</value>
  </data>
  <data name="Label.ApplicationDefaultWorkingDirectory" xml:space="preserve">
    <value>应用默认工作目录</value>
  </data>
  <data name="Description.ApplicationDefaultWorkingDirectory" xml:space="preserve">
    <value>当未指定工作目录或指定的工作目录为空时所使用的工作目录</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>自定义环境变量, 文件映射, 并随时使用它们快捷启动应用程序</value>
  </data>
  <data name="Label.Author" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="Label.Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="Label.ApplicationInformation" xml:space="preserve">
    <value>应用程序信息</value>
  </data>
  <data name="Label.ThirdPartyLibraries" xml:space="preserve">
    <value>第三方库</value>
  </data>
  <data name="Label.ViewLicense" xml:space="preserve">
    <value>查看许可证</value>
  </data>
  <data name="Label.License" xml:space="preserve">
    <value>许可证</value>
  </data>
  <data name="Common.None" xml:space="preserve">
    <value>空</value>
  </data>
  <data name="Label.Configuration" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="Description.Configuration" xml:space="preserve">
    <value>导入或导出配置</value>
  </data>
  <data name="Button.Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="Button.Export" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="Title.ImportConfiguration" xml:space="preserve">
    <value>导入配置</value>
  </data>
  <data name="Title.ExportConfiguration" xml:space="preserve">
    <value>导出配置</value>
  </data>
  <data name="Message.FailedToImportConfigurationPleaseCheckIfTheFileFormatIsCorrect" xml:space="preserve">
    <value>导入配置失败, 请检查文件格式是否正确</value>
  </data>
  <data name="Message.FailedToExportConfigurationPleaseCheckIfYouCurrentlyHaveAccessRightsToTargetPath" xml:space="preserve">
    <value>导出配置失败, 请检查您当前是否拥有目标路径的访问权限</value>
  </data>
  <data name="Common.View" xml:space="preserve">
    <value>视图</value>
  </data>
  <data name="Message.FailedToImportConfiguration" xml:space="preserve">
    <value>导入配置失败</value>
  </data>
  <data name="Message.FailedToExportConfiguration" xml:space="preserve">
    <value>导出配置失败</value>
  </data>
  <data name="Common.Default" xml:space="preserve">
    <value>默认</value>
  </data>
</root>